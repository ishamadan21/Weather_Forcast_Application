{"ast":null,"code":"var _jsxFileName = \"/Users/ishamadan/Desktop/web development/assignment7/assignment7_divyagirase/src/dayWeather.jsx\";\nimport React from 'react';\n\nclass DayWeather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createBlock = () => {\n      let weatherBlocks = [];\n\n      for (let i = 0; i < this.state.weatherData.length; i++) {\n        weatherBlocks.push(React.createElement(\"div\", {\n          className: \"HourlyWeatherElem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, this.createWeatherElements(i))); //alert(imgPath);\n      }\n\n      return weatherBlocks;\n    };\n\n    this.createWeatherElements = i => {\n      let weatherElementsBlock = []; //let imgPath = this.state.weatherData[i].weather[0].main + '.png';\n\n      let imgPath = \"http://openweathermap.org/img/wn/\" + this.state.weatherData[i].weather[0].icon + \"@2x.png\";\n      let weatherDesc = this.state.weatherData[i].weather[0].description;\n      let temp = this.convertTemperature(this.state.weatherData[i].main.temp).toFixed(0) + String.fromCharCode(176);\n      let weatherTime = this.state.weatherData[i].dt_txt;\n      let weatherHumidity = this.state.weatherData[i].main.humidity;\n      let weatherWind = this.convertSpeed(this.state.weatherData[i].wind.speed).toFixed(0);\n      weatherElementsBlock.push(React.createElement(\"div\", {\n        className: \"weatherElementsHourly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"weatherImagesHourly\",\n        src: imgPath,\n        alt: \"Weather Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"weatherTemp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, temp)), React.createElement(\"div\", {\n        className: \"weatherDesc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, weatherDesc), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"humidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"humidIcon\",\n        src: \"Humidity.png\",\n        height: \"20px\",\n        width: \"20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"humidity valueSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, weatherHumidity))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"humidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"humidIcon\",\n        src: \"wind.png\",\n        height: \"18px\",\n        width: \"18px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"humidity valueSpan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, weatherWind, \"kmph\")))), React.createElement(\"div\", {\n        className: \"wetherElementTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.convertTime(weatherTime.split(' ')[1].split(':')[0]))));\n      return weatherElementsBlock;\n    };\n\n    let apiData = [{\n      \"dt\": 1553709600,\n      \"main\": {\n        \"temp\": 272.09,\n        \"temp_min\": 271.358,\n        \"temp_max\": 272.09,\n        \"pressure\": 1018.01,\n        \"sea_level\": 1018.01,\n        \"grnd_level\": 997.153,\n        \"humidity\": 100,\n        \"temp_kf\": 0.73\n      },\n      \"weather\": [{\n        \"id\": 803,\n        \"main\": \"Clouds\",\n        \"description\": \"broken clouds\",\n        \"icon\": \"04n\"\n      }],\n      \"clouds\": {\n        \"all\": 60\n      },\n      \"wind\": {\n        \"speed\": 3.25,\n        \"deg\": 287.822\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 18:00:00\"\n    }, {\n      \"dt\": 1553713200,\n      \"main\": {\n        \"temp\": 271.59,\n        \"temp_min\": 271.1,\n        \"temp_max\": 271.59,\n        \"pressure\": 1018.335,\n        \"sea_level\": 1018.335,\n        \"grnd_level\": 997.403,\n        \"humidity\": 100,\n        \"temp_kf\": 0.49\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"02n\"\n      }],\n      \"clouds\": {\n        \"all\": 2\n      },\n      \"wind\": {\n        \"speed\": 3.4,\n        \"deg\": 294.075\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 19:00:00\"\n    }, {\n      \"dt\": 1553716800,\n      \"main\": {\n        \"temp\": 271.15,\n        \"temp_min\": 270.907,\n        \"temp_max\": 271.15,\n        \"pressure\": 1018.794,\n        \"sea_level\": 1018.794,\n        \"grnd_level\": 997.864,\n        \"humidity\": 100,\n        \"temp_kf\": 0.24\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"01n\"\n      }],\n      \"clouds\": {\n        \"all\": 1\n      },\n      \"wind\": {\n        \"speed\": 3.47,\n        \"deg\": 300.189\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 20:00:00\"\n    }, {\n      \"dt\": 1553720400,\n      \"main\": {\n        \"temp\": 270.722,\n        \"temp_min\": 270.722,\n        \"temp_max\": 270.722,\n        \"pressure\": 1019.211,\n        \"sea_level\": 1019.211,\n        \"grnd_level\": 998.29,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"01n\"\n      }],\n      \"clouds\": {\n        \"all\": 1\n      },\n      \"wind\": {\n        \"speed\": 3.55,\n        \"deg\": 305.558\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 21:00:00\"\n    }, {\n      \"dt\": 1553724000,\n      \"main\": {\n        \"temp\": 270.63,\n        \"temp_min\": 270.63,\n        \"temp_max\": 270.63,\n        \"pressure\": 1019.58,\n        \"sea_level\": 1019.58,\n        \"grnd_level\": 998.674,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"01n\"\n      }],\n      \"clouds\": {\n        \"all\": 1\n      },\n      \"wind\": {\n        \"speed\": 3.59,\n        \"deg\": 309.126\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 22:00:00\"\n    }, {\n      \"dt\": 1553727600,\n      \"main\": {\n        \"temp\": 270.421,\n        \"temp_min\": 270.421,\n        \"temp_max\": 270.421,\n        \"pressure\": 1019.849,\n        \"sea_level\": 1019.849,\n        \"grnd_level\": 998.886,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"01n\"\n      }],\n      \"clouds\": {\n        \"all\": 0\n      },\n      \"wind\": {\n        \"speed\": 3.67,\n        \"deg\": 307.204\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-27 23:00:00\"\n    }, {\n      \"dt\": 1553731200,\n      \"main\": {\n        \"temp\": 270.201,\n        \"temp_min\": 270.201,\n        \"temp_max\": 270.201,\n        \"pressure\": 1020.021,\n        \"sea_level\": 1020.021,\n        \"grnd_level\": 998.983,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 800,\n        \"main\": \"Clear\",\n        \"description\": \"clear sky\",\n        \"icon\": \"02n\"\n      }],\n      \"clouds\": {\n        \"all\": 7\n      },\n      \"wind\": {\n        \"speed\": 3.94,\n        \"deg\": 304.735\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-28 00:00:00\"\n    }, {\n      \"dt\": 1553734800,\n      \"main\": {\n        \"temp\": 269.942,\n        \"temp_min\": 269.942,\n        \"temp_max\": 269.942,\n        \"pressure\": 1020.24,\n        \"sea_level\": 1020.24,\n        \"grnd_level\": 999.091,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 803,\n        \"main\": \"Clouds\",\n        \"description\": \"broken clouds\",\n        \"icon\": \"04n\"\n      }],\n      \"clouds\": {\n        \"all\": 66\n      },\n      \"wind\": {\n        \"speed\": 4.24,\n        \"deg\": 306.38\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-28 01:00:00\"\n    }, {\n      \"dt\": 1553738400,\n      \"main\": {\n        \"temp\": 269.768,\n        \"temp_min\": 269.768,\n        \"temp_max\": 269.768,\n        \"pressure\": 1020.634,\n        \"sea_level\": 1020.634,\n        \"grnd_level\": 999.451,\n        \"humidity\": 100,\n        \"temp_kf\": 0\n      },\n      \"weather\": [{\n        \"id\": 803,\n        \"main\": \"Clouds\",\n        \"description\": \"broken clouds\",\n        \"icon\": \"04n\"\n      }],\n      \"clouds\": {\n        \"all\": 67\n      },\n      \"wind\": {\n        \"speed\": 4.63,\n        \"deg\": 313.941\n      },\n      \"sys\": {\n        \"pod\": \"n\"\n      },\n      \"dt_txt\": \"2019-03-28 02:00:00\"\n    }];\n    this.state = {\n      weatherData: props.location.state.dayWiseData,\n      data: apiData\n    };\n  }\n\n  render() {\n    var selectedDate = new Date(this.state.weatherData[0].dt_txt.split(' ')[0]);\n    var weekDay = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    return React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"London\"), React.createElement(\"div\", {\n      className: \"displayData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Hourly Weather Forecast on \", weekDay[selectedDate.getDay()] + \" \" + months[selectedDate.getMonth()] + \" \" + (selectedDate.getDate() + 1) + \", \" + selectedDate.getFullYear())), React.createElement(\"div\", {\n      className: \"weatherElemContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.createBlock()));\n  }\n\n  convertSpeed(value) {\n    var speed = value * 18 / 5;\n    return speed;\n  }\n\n  convertTemperature(value) {\n    var celcius = value - 273.15;\n    return celcius;\n  }\n\n  convertTime(value) {\n    var AmOrPm = value >= 12 ? 'pm' : 'am';\n    var hours = value % 12 || 12;\n    var finalTime = hours + \" \" + AmOrPm;\n    return finalTime;\n  }\n\n}\n\nexport default DayWeather;","map":{"version":3,"sources":["/Users/ishamadan/Desktop/web development/assignment7/assignment7_divyagirase/src/dayWeather.jsx"],"names":["React","DayWeather","Component","constructor","props","createBlock","weatherBlocks","i","state","weatherData","length","push","createWeatherElements","weatherElementsBlock","imgPath","weather","icon","weatherDesc","description","temp","convertTemperature","main","toFixed","String","fromCharCode","weatherTime","dt_txt","weatherHumidity","humidity","weatherWind","convertSpeed","wind","speed","convertTime","split","apiData","location","dayWiseData","data","render","selectedDate","Date","weekDay","months","getDay","getMonth","getDate","getFullYear","value","celcius","AmOrPm","hours","finalTime"],"mappings":"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","sourcesContent":["import React from 'react'\r\nclass DayWeather extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    let apiData =\r\n    [{\"dt\":1553709600,\"main\":{\"temp\":272.09,\"temp_min\":271.358,\"temp_max\":272.09,\"pressure\":1018.01,\"sea_level\":1018.01,\"grnd_level\":997.153,\"humidity\":100,\"temp_kf\":0.73},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"broken clouds\",\"icon\":\"04n\"}],\"clouds\":{\"all\":60},\"wind\":{\"speed\":3.25,\"deg\":287.822},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 18:00:00\"},\r\n    {\"dt\":1553713200,\"main\":{\"temp\":271.59,\"temp_min\":271.1,\"temp_max\":271.59,\"pressure\":1018.335,\"sea_level\":1018.335,\"grnd_level\":997.403,\"humidity\":100,\"temp_kf\":0.49},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"02n\"}],\"clouds\":{\"all\":2},\"wind\":{\"speed\":3.4,\"deg\":294.075},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 19:00:00\"},\r\n    {\"dt\":1553716800,\"main\":{\"temp\":271.15,\"temp_min\":270.907,\"temp_max\":271.15,\"pressure\":1018.794,\"sea_level\":1018.794,\"grnd_level\":997.864,\"humidity\":100,\"temp_kf\":0.24},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01n\"}],\"clouds\":{\"all\":1},\"wind\":{\"speed\":3.47,\"deg\":300.189},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 20:00:00\"},\r\n    {\"dt\":1553720400,\"main\":{\"temp\":270.722,\"temp_min\":270.722,\"temp_max\":270.722,\"pressure\":1019.211,\"sea_level\":1019.211,\"grnd_level\":998.29,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01n\"}],\"clouds\":{\"all\":1},\"wind\":{\"speed\":3.55,\"deg\":305.558},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 21:00:00\"},\r\n    {\"dt\":1553724000,\"main\":{\"temp\":270.63,\"temp_min\":270.63,\"temp_max\":270.63,\"pressure\":1019.58,\"sea_level\":1019.58,\"grnd_level\":998.674,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01n\"}],\"clouds\":{\"all\":1},\"wind\":{\"speed\":3.59,\"deg\":309.126},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 22:00:00\"},\r\n    {\"dt\":1553727600,\"main\":{\"temp\":270.421,\"temp_min\":270.421,\"temp_max\":270.421,\"pressure\":1019.849,\"sea_level\":1019.849,\"grnd_level\":998.886,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01n\"}],\"clouds\":{\"all\":0},\"wind\":{\"speed\":3.67,\"deg\":307.204},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-27 23:00:00\"},\r\n    {\"dt\":1553731200,\"main\":{\"temp\":270.201,\"temp_min\":270.201,\"temp_max\":270.201,\"pressure\":1020.021,\"sea_level\":1020.021,\"grnd_level\":998.983,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":800,\"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"02n\"}],\"clouds\":{\"all\":7},\"wind\":{\"speed\":3.94,\"deg\":304.735},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-28 00:00:00\"},\r\n    {\"dt\":1553734800,\"main\":{\"temp\":269.942,\"temp_min\":269.942,\"temp_max\":269.942,\"pressure\":1020.24,\"sea_level\":1020.24,\"grnd_level\":999.091,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"broken clouds\",\"icon\":\"04n\"}],\"clouds\":{\"all\":66},\"wind\":{\"speed\":4.24,\"deg\":306.38},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-28 01:00:00\"},{\"dt\":1553738400,\"main\":{\"temp\":269.768,\"temp_min\":269.768,\"temp_max\":269.768,\"pressure\":1020.634,\"sea_level\":1020.634,\"grnd_level\":999.451,\"humidity\":100,\"temp_kf\":0},\"weather\":[{\"id\":803,\"main\":\"Clouds\",\"description\":\"broken clouds\",\"icon\":\"04n\"}],\"clouds\":{\"all\":67},\"wind\":{\"speed\":4.63,\"deg\":313.941},\"sys\":{\"pod\":\"n\"},\"dt_txt\":\"2019-03-28 02:00:00\"}];\r\n    \r\n    this.state = {weatherData : props.location.state.dayWiseData,\r\n                  data : apiData\r\n    };\r\n}\r\n  render() {\r\n    var selectedDate = new Date(this.state.weatherData[0].dt_txt.split(' ')[0]);\r\n    var weekDay = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"];\r\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    return(\r\n        <div className=\"mainDiv\">\r\n            <div>\r\n                <div className=\"displayData\">London</div>\r\n\r\n                <div className=\"displayData\">Hourly Weather Forecast on {weekDay[(selectedDate.getDay())] + \" \" + months[(selectedDate.getMonth())] +\" \"+(selectedDate.getDate() + 1) + \", \" + (selectedDate.getFullYear())}</div>\r\n            </div>\r\n            <div className=\"weatherElemContainer\">\r\n            {this.createBlock()}\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  createBlock = () => {\r\n      let weatherBlocks = [];\r\n      for(let i=0;i<this.state.weatherData.length;i++){\r\n        weatherBlocks.push(\r\n            <div className=\"HourlyWeatherElem\">\r\n                {this.createWeatherElements(i)}\r\n            </div>\r\n        );\r\n        //alert(imgPath);\r\n        \r\n      }\r\n      return weatherBlocks;\r\n  }\r\n\r\n  createWeatherElements = (i) => {\r\n    let weatherElementsBlock = [];\r\n    //let imgPath = this.state.weatherData[i].weather[0].main + '.png';\r\n    let imgPath = \"http://openweathermap.org/img/wn/\"+ this.state.weatherData[i].weather[0].icon+ \"@2x.png\";\r\n    let weatherDesc = this.state.weatherData[i].weather[0].description;\r\n    let temp = this.convertTemperature(this.state.weatherData[i].main.temp).toFixed(0)+String.fromCharCode(176);\r\n    let weatherTime = this.state.weatherData[i].dt_txt;\r\n    let weatherHumidity = this.state.weatherData[i].main.humidity;\r\n    let weatherWind = this.convertSpeed(this.state.weatherData[i].wind.speed).toFixed(0);\r\n    weatherElementsBlock.push(\r\n        <div className=\"weatherElementsHourly\">\r\n            <div>\r\n            <div>\r\n                <img className=\"weatherImagesHourly\" src={imgPath} alt=\"Weather Image\"/>\r\n                <div className=\"weatherTemp\">\r\n                {temp}\r\n            </div>\r\n            </div>\r\n            <div className=\"weatherDesc\">\r\n                {weatherDesc}\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div className=\"humidity\"><img className=\"humidIcon\" src=\"Humidity.png\" height=\"20px\" width=\"20px\"/></div>\r\n                    <div className=\"humidity valueSpan\">{weatherHumidity}</div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            <div>\r\n                <div className=\"humidity\"><img className=\"humidIcon\" src=\"wind.png\" height=\"18px\" width=\"18px\"/></div>\r\n                <div className=\"humidity valueSpan\">{weatherWind}kmph</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n            <div className=\"wetherElementTime\">\r\n            {this.convertTime(weatherTime.split(' ')[1].split(':')[0])}\r\n            </div>\r\n        </div>\r\n    );\r\n    return weatherElementsBlock;\r\n  }\r\n\r\n  convertSpeed(value){ \r\n    var speed = (value*18)/5;\r\n    return speed;\r\n  }\r\n\r\n  convertTemperature(value){\r\n    var celcius = (value - 273.15);\r\n    return celcius;\r\n  }\r\n\r\n  convertTime(value){\r\n    var AmOrPm = value >= 12 ? 'pm' : 'am';\r\n    var hours = (value % 12) || 12;\r\n    var finalTime = hours + \" \" + AmOrPm; \r\n    return finalTime; \r\n  }\r\n\r\n}\r\nexport default DayWeather"]},"metadata":{},"sourceType":"module"}